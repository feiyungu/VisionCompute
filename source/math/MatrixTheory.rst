线性代数与矩阵
**************

关于线性与矩阵的本质 这里已经讲的很深入了 http://www.cnblogs.com/TenosDoIt/p/3214096.html 矩阵的本质就是变换，而变换的本质就是运动。空间与集合的区别。空间就是对某种运算封闭的集合。 空间的基，空间坐标与空间的坐标系。

相似矩阵，就是对同一变换的不同描述，当然有描述好，有的描述就不好。空间基就坐标就不相关。最小的秩肯定是方阵，但是 :math:`mxn` 矩阵就必然有重复像。



这些都早都是由解线性方程组发展而来，研究方程系数排列而得来的。矩阵的加法与入都是方程组的变换相关的，而矩阵的乘法，是源于换元计算而来，相当于基转换。 并且将其推广到了多维空间，以至于无限维的空间。 

其实求矩阵的秩就是求其最大向量无关组，也就是基的个数。对于图像的一阶导以及二阶导，是不是可以通过行列式来直接计算，而卷积计算可以相当于矩阵的分块计算。也就是池化并不改变矩阵的性质。 当做一个矩阵操作的话，所有计算应该都是可以可逆的。来来保证信息不损失呢。  特殊值与特征方程。



特征向量就是空间的基，而特殊值就是坐标值了。 如果已经有了基就是要求特征的方程。或者说已经有矩阵，求其特征值与特征向量了。


二次型其实与SVM类似，采用换元的方程实现，旋转为标准模型来计算。例如方程的ax2+bx+c=0 只有化成 (a-x)^2 =0 时，容易求解。
http://wenku.baidu.com/view/c6aa38fd770bf78a65295491.html

伽罗互运用群的思想彻底解决了用根式求解代数方程的可能性。由些代数转变成为研究代数运算结构的科学。

并且可以用来求极值，二次型的极植就是特征值中极值。
http://www.docin.com/p-180278042.html

方程的根与系数的关系
--------------------
韦达定理， 

群环域
------
是定义的结构，至少要有一定的序。既然是有序就至少一个二元运算。

http://www.cchere.com/thread/3038887


行列式
=========

行列式就是全排列求合。并且全排列的性质，因为每一行，每一列都必须出现每一个无素中，所以对于任意一行,列的操作都相当于是对于行列式所有项进行操作。同时我们还可以进行行列式任意两列相同，或者一行或者一列全为零，那么两个行列式值为零。 
在python中可以使用`numpy.linalg <http://docs.scipy.org/doc/numpy/reference/routines.linalg.html>`_  来进行常规的计算。
行列式就是一个函数，把n阶方阵，映射为一个标量，并且 在欧几何中，有着“体积”的概念。同时可以做为圆锥曲线的判别式。在看到行列式的时候，就要想着那个函数求和形式。这样就会一目录了解了，其实就是一次多项式看到特定的规律排列起来。


cross-product 就是定义按照行列式的定义来写的，只不过它是向量表示，物理意义是四边形面积，一个线性变换的行列式的值，就知道是两个两个变换前后面积比值。

inner-product表示表示的是投影，或者是向量相关性.

行列式与空间的定向性，线性变换，正为同向，负为反像。

规范化正交基的行列式=1.



:math:`aug_y=(a'*a)^(-1)*a'` ; % 最小二乘,使残差最小
:math:`r_n=a'*(eye(10)-a*aug_y)` ; % 正交
最小二乘就是直接投影到正交空间。


矩阵
======

一般来说，矩阵可以直接一元函数方程。如何解非线性的二元方程。二次型就是其中一种。通过左右乘同时就可以表示一个二次方程了。对于一元函数，一个矩阵表示一组方程。而二次型，二次型而是表示一个方程。
看到行列式就应该想到那个那个遍历求和式。有点类似于内积的概念。
`行列式 <http://zh.wikipedia.org/wiki/%E8%A1%8C%E5%88%97%E5%BC%8F#.E7.AB.96.E7.9B.B4.E7.B7.9A.E8.A8.98.E6.B3.95>`_   这个里面讲了行列式的发展史，并且与各个知识的联系。

这个是矩阵 `矩阵 <http://zh.wikipedia.org/wiki/%E7%9F%A9%E9%98%B5>`_  把这两个研究明白就行了。

现在需要的是各个知识之间的联系。而各个具体知识与再用到的时候再去研究。这也许就是整体与局部的关系。我所喜欢的应该是这种整体的关系的研究。而非具体的计算。

对行矩阵 Ax=B,我们习惯于按行与按列求法不同。尤其是按列行式的行列式。最常见的x为一个列向量，而B 也是一个列向量，而A是一个矩阵。按照列看，A就是一个线性空间的基，而x就是基的坐标值了。而b 就是一个项向量。  例如是一组点。x也是一组点大坐标了。所以坐标一般都用列向量来表示。

矩阵的kronecker积有点类似于笛卡尔积。

可以用矩阵来生成线性空间。但是矩阵本身并不是代性空间。对于Ax=0,与Ax=B,其实就是一个解空间平移的过程。


对称阵
======

Bezout矩阵，是对称阵，并且还可以找到两对应的多项式来生成。

初等变换
============

左行右列。最简单的说明，那不断乘以单位阵。可以先对单位阵进行变换，然后在左乘或者右乘了。初等方阵就相当于自然数中质数，例如一个方阵都可以一组初等方阵乘积。这个就像自然数因式分解。

相似矩阵，经过有限次初等变换的能相等的矩阵那就是相似矩阵。相似型可以用来研究二次型。也就是二次函数。任意一个给定二次型都是一个对称阵。把一个二次型化成标准型，其标准形的系数就是对称阵的特征值。

矩阵乘法的理解
=====================

#. 按照定义，最基本的理解，那就是每一个元素都是对应的左行右列，内积之后。 在这个理解里，我们要把左边的一行当做向量，而右边的一列当一个空间向量。
#. 按边的Ax=B,x的每一列与A与相乘。最后得到结果一列。这个就是一组线性组合。
#. 按A的每一列与X的每一行相乘。
#. 左边一行与右边一行。 就相当于一层一层的叠加。是不是那个金字塔。
   1.与复合函数 以及神经网络 
方程本身就是函数的隐式写法。所以方程组也就是函数组。对于一个矩阵来说，行数代表因变量的个数，而列数代表了自变量的个数。矩阵相乘的意义，就是线性变例如A=B,B=C,然后直接求A=C的过程。简单一些就是复合函数。
例如例如两个矩阵F,G.分别代表的是f,g的系数行列。那么f(g)就是F*G,而g(f)而是G*F. 右乘就是求解变量的函数。而左乘那就是外面在加了一层。例如f(g(h))那就是如何求f呢，那就是F*G*H.

而神经网络其实也就是矩阵乘法的应用。

`随机mapping <https://en.wikipedia.org/wiki/Random_mapping>`_ 可以用降维，其实降维很简单，只需要生成一个m*n的矩阵，然后直接相同。就能实现降维。只是左乘或右乘。

乘法就是一种映射变换，没有固定意义，我们用随机也达到同样的目的。当然这种随机映射的能力也就是人类的类比能力，也就是 `人类为什么能从极少量的数据中学习。<http://synchuman.baijia.baidu.com/article/273458>`_

同时降与升都在这个A中。
上三角矩阵就是利用高斯消元法
==========================================

从而A=LU-> PA=LU使其更加通用化了，而这个P叫做置换，那就是交换其行。这个P有一些特殊的性质，每一个维空间中，它们个数是有限的，每一维都有N!个。并且其其中任何一个P的转置=P的逆。并且形成一个群。

并且在这里学明白了空间与子空间。空间是由向量而来。
集合的笛卡尔积-> 向量->空间-> 线性空间->群。
对于线性空间，要求加法与数乘。并且八大基本运算规律。这些定义一定会有零空间，与一空间。也就是与0，1.这个两个值是必然存在的。
并且二维空间的一维子空间与一维空间是不一样的。因为其向量是二维的。
对于二维空间来说，它的子空间个数也是有限的，自然，0，以及所有过原点的直线。而不是我们想像的四个象限。
对于二维空间来说，它的子空间个数也是有限的，本身，0，所有过原点平面，以及直线。
每一个矩阵都可以构杨一个空间，如何构成呢，那就是其个列向量的线性组合。

一个向量空间中，只有其Ax=0 解构子空间。
而Ax=B不能子空间，没有没有零向量。但是这些解本身又具有什么性质呢。
矩阵的秩是主元的个数，那么，是由自由变量的的个数。例如haskell解数独。

-方程组的解空间
======================

一组方程组解就组成一个线性空间，所以方程组的解与+，乘应该还是方程的解。
把方程组相当做函数，齐次方程组，就是没有常数量，非齐次那就是有常数项。

线性空间其实也是线性方程组的解空间。这个线性方程组就叫做变换。

%RED% 
Ax=b,可以看做是Ax=0的平移，所以Ax=b的解个数取决于Ax=0有多少解。
是不是看f（x)=Ax看做一个函数呢。这样原来函数变化，就有可能变成了空间的移动。随着x的变化而化。如果这样是不是可以有f(x)=Ax^n+bx^(x-1)....这样的方程呢。这样的方程有什么意义。如果这样对于描述物体运动，会更好，现在的基本变化方程已经都可以完全用4*4来实现了。

如何利用有限的线段拟合一个区域边界。反过来如果线性相关，而这个线段首尾相接就形成封闭的区线，其实也就是x1+x2+x3+x4..=0,也就是Ax=0,因为解空间的个数，另外一个那就是现在加法可以任意方向因为有交换率。但是我们如果能要求加法是单向的，不能再交换。我们是不能找到这样一个有序了数列拟合任何区域的边界。就像圆的内接多边形，现在我可以要求多边形长度有变化，有向线段，如果规定逆时针为正，这样不就是求Ax=0就好了。利用曲线的曲率来决定向量的长度。

f(x)=A*T^n*G.
f(x)是最终运动方程。
A是物体本身，T就是那个仿射变换，n代表做几次变换，而g是那因变量的各种函数，你如地球转动的角度是时间函数。这样不就是一个整个的运动方程了。那么我们只要输入每一个输入状态。例如当前这个一个原点的位置，那么整个物体的位置不就知道了。 



%ENDCOLOR%

*线性空间维，基，坐标*
有基才会坐标，坐标是一维的，有了基就可以事情简化为一维的运算。
秩是向量的最大无关组，秩也代表了可以线性方程组可以多个主元。也就相当于基的维数。而自由变量代表了解决空间的维数。

二阶导数组成一个海森矩阵。

Ax=b,我们看做一个函数，而例如f=Ax是函数的象公间，所以每b都是A的各列的线性组合。所以这个方程有解前提那是。b是A列空间一个列的线性组合。其线性组合另一个空间，并且这个空间维等+加上原空间的维数=整个空间维数。空间的最大维数是什么呢。与集合的势是什么关系。
零空间就是齐次方程组的解空间。`null space <http://zh.wikipedia.org/wiki/%E9%9B%B6%E7%A9%BA%E9%97%B4>`_  也正好是其正交补补集。也就是求f=0的值，

四个基本子空间，那就是左右零空间，与行空间与列空间。

矩阵空间，秩1矩阵和小世界图
========================================

秩1的矩阵是不是可以用压缩数据。如果发现一个矩阵秩为1，就可以直接使用，一行一列，就保存其全部信息。那么一幅的图像秩一般会是多大呢。 并且在numpy,有特殊的支持，那就是broadcast方式，np.ogrid正是为产生这各矩阵最简单的方法，例就是那乘法表的实现最简单。
对于矩阵直接使用reduce操作。在函数矩阵函数的时候这些就会非常的方便。 注意numpy中array 是针对向量组的,numpy的matrix才是针对矩阵的。
小世界图就是六度空间。
#. `原创--秩为1的矩阵相关性质 <http://wenku.baidu.com/view/8a683694daef5ef7ba0d3ca7.html>`_ 

正交向量与子空间与子空间投影
==========================================

Ax=0就得出它的零空间与Ax的空间正交的，并且两者维数是相加等空间维数，所以两个空间正交，也叫做正交补。Ax=b变成f=Ax的话，那就f值就一个由A的列生成向量空间。
投影的过程，也就是扔掉了Ax=0的那部分，而留下了Ax=B的那一部分。投影指的一个空间的向量在子空间的投影。如果在全空间的投影，那么投影矩阵就成了单位阵，并且误差投影矩阵就变成了0向量。只是一个子空间上投影。那么其误差就一定在子空间的正交空间中。并且误差投影+投影矩阵=单位阵。这也是必然的。
P=aaT/aTa
在解Ax=b,时无解时，取一个近视解，b取在A 上的投影，熏直量就是误差。误差最小是求投影。P=A(ATA)-1AT，
通过通过一般二维的投影提出了高维空间的投影问
并且P^的平方=P,

正投影指的投影方向与投影平面是垂直的，而斜投影而非垂直的，相当于把投影平面当做旋转，然后再投影。斜投影=错切+正投影，那如果投影面是区面怎么办，例如是一个球面呢。会有什么性质与效果呢。还有那就是`曲线曲面投影 <http://wenku.baidu.com/view/bf2fe54633687e21af45a964.html>`_  这个就要用到矩阵函数了吧。
斜投影不仅要指定投影平面，还要指定投影方向。具体见快盘斜投影的论文。

 最小二乘 算法
=====================

通过子空间投影误差矩阵,通过代性代数求正交可以快速得到，也可以通过微积分求偏导极值得到参数值是一样的过程。以前一直感觉最小二乘的神秘，现在无非二次多元多项式求偏导。求方程组的解而己。

矩阵求导
============

现在明白了矩阵求导基本的就是jacobian 行列式， 从这个角度理解，就比较容易理解求导是什么了。  一个 
.. math:: m \times 1$% 的向量对一个 
.. math:: n \times 1 的向量求导，雅克比矩阵就是%$ m \times n,  我们实际上分析的时候都是基于jacobian行列式的。

     <img src="%ATTACHURLPATH%/leastSquare.JPG" alt="leastSquare.JPG" width='563' height='435' />
See also
========

#. `幂等矩阵 <http://baike.baidu.com/view/2963144.htm>`_  idempotent matrix
#. `埃尔米特矩阵 <http://zh.wikipedia.org/wiki/&#37;E5&#37;9F&#37;83&#37;E5&#37;B0&#37;94&#37;E7&#37;B1&#37;B3&#37;E7&#37;89&#37;B9&#37;E7&#37;9F&#37;A9&#37;E9&#37;98&#37;B5>`_ Hermitian matrix  就是转置+共轭。
#. `Moore–Penrose 广义逆矩阵 <http://wenku.baidu.com/view/06ca5b3f0912a216147929aa.html>`_  
#. `向量的定义 <http://zh.wikipedia.org/wiki/&#37;E5&#37;90&#37;91&#37;E9&#37;87&#37;8F>`_  具有大小与方向
#. `向量与矩阵的关系  <http://zhidao.baidu.com/link?url&#61;rUj7T6KBV799GObjVizmfbtT2QzLbByhWdfxv3U6cSxTmZ6fkdwdGJqDOD8D4E6YKgyJiHThp4tX-UbSPMb1m&#95;>`_  
#. `How to perform non-linear optimization with scipy/numpy or sympy? <http://stackoverflow.com/questions/12942153/how-to-perform-non-linear-optimization-with-scipy-numpy-or-sympy>`_  leastquare
#. `scipy中的优化 <http://scipy-lectures.github.io/advanced/mathematical&#95;optimization/index.html#knowing-your-problem>`_  
#. `计算数学主要研究方向 <http://math.imu.edu.cn/school/yjfxo.html>`_  
#. `sympy 中支持 matrix  Derivative <https://github.com/sympy/sympy/pull/1275>`_  

Thinking
========



*SVD分解*左右特征值，西矩阵。西矩阵是复数=实数的正交阵。

-- Main.GangweiLi - 15 Oct 2013


*`奇异阵 <http://stackoverflow.com/questions/10326015/singular-matrix-issue-with-numpy>`_  无逆，且一个行列式Det为0* 并且为numpy.linalg心专门的线性代数的包，例如求rank,det等。注意求秩不直接使用matrix中那个就是返回的是维数。

-- Main.GangweiLi - 16 Oct 2013


*初等方阵相当于质数*任何一个可逆方阵可都示有限个初等方阵的乘积。

-- Main.GangweiLi - 17 Oct 2013




我感觉行列式和cross-product仍旧联系不起来?

-- Main.GegeZhang - 20 Oct 2013


*现在明白为什么要一个矩阵要乘以的转置*
这个是为了解决了Ax=B的在无解的情况下，找到一个最优解。例如我们需要三个参数来建立一个方程，来求解一量。但是我们为了测量的精确，我们N组数据，这就形成了N*3的矩阵。然后，我们不知道哪一组方程是不好的，直接把它扔掉了。我们需要的基于这些值得到一个最优解。如何来得到，在方程的两边同乘以它的转置，至于是左乘还是右乘。就要看你是N*N,还是变成3*3了。并且这是一个更好的矩阵。并且这个转置矩阵秩与原来是一样的。所以取得一大组数据之后。第一步删除重复的，然后删除线性的相关。只留下线性无关的。一个向量组的秩与是等于它的维数的。[[1,2,3],[2,4,6]] 这个只是一维的。 那就有一个问题，矩阵的秩区分行与列吗。应该不区分吧？然后再乘以转置变成一个更好的矩阵。

-- Main.GangweiLi - 21 Oct 2013


*子空间*
一个子空间的维数与正交的子空间，它们的维数之和必然要等于这个空间的维数。例一个一根直线是一维的，而法平面就是二维。这样在三维的空间。它们才是正交的。另外一个空间的子空间，是指的其一个划分呢，还是只是其低层的子空间。

-- Main.GangweiLi - 21 Oct 2013


*点线面* 以及整个数域用集合论以空间来研究。它们属于哪一部分。

-- Main.GangweiLi - 21 Oct 2013


*相关=平行* 

-- Main.GangweiLi - 21 Oct 2013




-- Main.GangweiLi - 21 Oct 2013


*图*
用列代表结点，而行代表边，起点用-1，终点用1，无关用零。这样形成矩阵，那如何表达权重值呢，结点数-边数+环数=1

-- Main.GangweiLi - 27 Oct 2013


矩阵已经看到17张了。

-- Main.GangweiLi - 27 Oct 2013


sympy 中矩阵推导好像不太靠谱

-- Main.GegeZhang - 04 Dec 2013


Jacobian 就是向量vector求导，有什么意思


-- Main.GegeZhang - 04 Dec 2013


对于向量B=[rx,ry,rz]‘和反对称矩阵R= [0,-rz ry; rz,0,-rx;-ry,rx,0]，

-- Main.GegeZhang - 16 Dec 2013

