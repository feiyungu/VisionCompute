图像分割
********

点检测
===========

 点检测一个点的检测，还是一个块检测。点检测简单只要取一个阈值，就例如利用均值，或者别的得到距离值，然后利用这个距离值来进行判断，块检测就要求是一个范围，也首先是连通性的检测。
对于块的检测可以用形态学的方法，但是要就考虑块的大小的问题。可以把那些孤立点消除。

线检测
=========

分为在直线，可以用霍夫变换，一般是先通过边界检测，然后再做这些，边界检测可以用一阶或者二阶来做。一阶来解决是不是在边界上，二阶解决在哪些的问题。这里可以用Canny算子。
#. 计算图像的梯度并对其设置门限得到一幅二值图像。
#. 在参数平面内确定再细分。
#. 对像素高度集中的地方检验其累加器的单元的数目。
#. 检验选择的单元中像素之间的关系。

从整体看，还可以其上颜色值，当做其他值，例如把切成列表下一个坐标。一个RGBA如果是整型的，可以就四个字节，我们四个字节可以存储各种有效的结构信息，把这个原始图像变成一个度量图像，我们可以把关于一个点的各种信息都压缩在另一幅图像中。 可以利用图形的各种知识来进行操作。
图像分割——分水岭算法
=================================

区域的生长，分割与合并
分水岭算法，通过通过判定一个区域的中值作为分水区域，对图像进行分割，算子有一阶算子，二阶算子。等等

边界检测可以用过零来检测边界。
边界的连接问题，例如知道了边缘检测的图形之后，我们在模型本身的特点，来确定模板的大小，其实也就是其领域的大小，然后确定周值与这个中心的点关系。然后在这个领域内再计算某些点的特性（例如梯度）与中心点的特性的关系。来决定。 例如大梯度的大小与方向都在一定的范围内就连接起来。当然T值也是自动产生的。

#. `OpenCV-Python教程（9、使用霍夫变换检测直线） <http://blog.csdn.net/sunny2038/article/details/9253823>`_  检测中线段，试一下


-- Main.GegeZhang - 11 Jul 2013



分割分为点线面，检测。检测变换后就变成了基本变成二值图像。只为只有这样容易区分背影与对象本身。就是背景就相当于集合的全集，而子集就相当于对象本身。就要用到一个门限，但是门限分二种，一种是局部动态计算，另外一种是全局的。对于结构简单的图像全局，对于复杂图形用局部分的比较好。



-- Main.GangweiLi - 23 Sep 2013


区域的分割，如何知道每个点是属于哪一个区域呢，还是对每一个点对于tag标记呢。 并且区域分割。利用四叉树或者二叉树对区域进行分割。这个就要自定义存储结构了。为什么现在自己经常纠结于存储结构呢。直接链表。就搞定了。


+`图像分割之（二）Graph Cut（图割） <http://blog.csdn.net/zouxy09/article/details/8532111>`_ 
=========================================================================================================


他通过约束边界项和区域项来达到通过能力最小值约束：

.. math:: E(L)=\alpha R(L)+B(L)
其中区域项通过约束概率最大来实现：



.. math:: R_p(1)=-ln Pr(I_p|"obj")


.. math:: R_p(0)=-ln Pr(I_p|"bkg")

边界项通过约束两个不相似的程度来实现：


.. math:: B(L)=\sum_{{p,q}\in N}B_{<p,q>}\delta (l_p,l_q)

-+`grab-cut < 图像分割之（三）从Graph Cut到Grab Cut>`_ 
=================================================================


%$D (x) = \sum\limits_{i = 1}^K {{\pi _i}} {g_i}(x;\mu ,{\Sigma _i}),\sum\limits_{i = 1}^K {{\pi _i}}  = 1  and 0 \le {\pi _i} \le 1
$%

其中 
.. math:: g(x;\mu ,{\rm{\backslash Sigma}}) = \frac{1}{{\sqrt {((} 2\pi {)^d}{\rm{\backslash Sigma}}|)}}exp[ - \frac{1}{2}{(x - \mu )^T}{\rm{\backslash Sigm}}{{\rm{a}}^{( - 1)}}(x - \mu )]

通过对初始选定的初始值来作为估计高斯混合模型中几个参数，得到这些参数后，对于这些点就可以进行判断是目标还是背景的概率了，
然后是差异性比较：



.. math:: V(\alpha,z)=\gamma \sum_{(m,n)\in C}[a_n\neq a_m]exp-\beta||z_m-z_n||^2

-++graph cut 缺点：
======================


算法是利用的物理学中粒子的原理，要对每一个像素点进行计算，计算比较耗时


